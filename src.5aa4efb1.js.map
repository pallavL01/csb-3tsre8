{"version":3,"sources":["src/index.js"],"names":["notesContainer","document","getElementById","addNoteButton","querySelector","getNotes","JSON","parse","localStorage","getItem","saveNotes","notes","setItem","stringify","createNoteElement","id","content","element","createElement","classList","add","value","placeholder","addEventListener","updateNote","window","confirm","deleteNote","addNote","noteObject","Math","floor","random","noteElement","insertBefore","push","newContent","filter","note","removeChild","forEach"],"mappings":";;;AAuEC,aAvED,QAAA,gBAEA,IAAMA,EAAiBC,SAASC,eAAe,OACzCC,EAAgBH,EAAeI,cAAc,aASnD,SAASC,IACAC,OAAAA,KAAKC,MAAMC,aAAaC,QAAQ,sBAAwB,MAGjE,SAASC,EAAUC,GACjBH,aAAaI,QAAQ,oBAAqBN,KAAKO,UAAUF,IAG3D,SAASG,EAAkBC,EAAIC,GACvBC,IAAAA,EAAUhB,SAASiB,cAAc,YAoBhCD,OAlBPA,EAAQE,UAAUC,IAAI,QACtBH,EAAQI,MAAQL,EAChBC,EAAQK,YAAc,oBAEtBL,EAAQM,iBAAiB,SAAU,WACjCC,EAAWT,EAAIE,EAAQI,SAGzBJ,EAAQM,iBAAiB,WAAY,WAClBE,OAAOC,QACtB,sDAIAC,EAAWZ,EAAIE,KAIZA,EAGT,SAASW,IACDjB,IAAAA,EAAQN,IACRwB,EAAa,CACjBd,GAAIe,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBhB,QAAS,IAGLiB,EAAcnB,EAAkBe,EAAWd,GAAIc,EAAWb,SAChEhB,EAAekC,aAAaD,EAAa9B,GAEzCQ,EAAMwB,KAAKN,GACXnB,EAAUC,GAGZ,SAASa,EAAWT,EAAIqB,GAChBzB,IAAAA,EAAQN,IACKM,EAAM0B,OAAO,SAACC,GAASA,OAAAA,EAAKvB,KAAOA,IAAI,GAE/CC,QAAUoB,EACrB1B,EAAUC,GAGZ,SAASgB,EAAWZ,EAAIE,GAGtBP,EAFcL,IAAWgC,OAAO,SAACC,GAASA,OAAAA,EAAKvB,KAAOA,KAGtDf,EAAeuC,YAAYtB,GAjE7BZ,IAAWmC,QAAQ,SAACF,GACZL,IAAAA,EAAcnB,EAAkBwB,EAAKvB,GAAIuB,EAAKtB,SACpDhB,EAAekC,aAAaD,EAAa9B,KAG3CA,EAAcoB,iBAAiB,QAAS,WAAMK,OAAAA","file":"src.5aa4efb1.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nconst notesContainer = document.getElementById(\"app\");\nconst addNoteButton = notesContainer.querySelector(\".add-note\");\n\ngetNotes().forEach((note) => {\n  const noteElement = createNoteElement(note.id, note.content);\n  notesContainer.insertBefore(noteElement, addNoteButton);\n});\n\naddNoteButton.addEventListener(\"click\", () => addNote());\n\nfunction getNotes() {\n  return JSON.parse(localStorage.getItem(\"stickynotes-notes\") || \"[]\");\n}\n\nfunction saveNotes(notes) {\n  localStorage.setItem(\"stickynotes-notes\", JSON.stringify(notes));\n}\n\nfunction createNoteElement(id, content) {\n  const element = document.createElement(\"textarea\");\n\n  element.classList.add(\"note\");\n  element.value = content;\n  element.placeholder = \"Empty Sticky Note\";\n\n  element.addEventListener(\"change\", () => {\n    updateNote(id, element.value);\n  });\n\n  element.addEventListener(\"dblclick\", () => {\n    const doDelete = window.confirm(\n      \"Are you sure you wish to delete this sticky note?\"\n    );\n\n    if (doDelete) {\n      deleteNote(id, element);\n    }\n  });\n\n  return element;\n}\n\nfunction addNote() {\n  const notes = getNotes();\n  const noteObject = {\n    id: Math.floor(Math.random() * 100000),\n    content: \"\"\n  };\n\n  const noteElement = createNoteElement(noteObject.id, noteObject.content);\n  notesContainer.insertBefore(noteElement, addNoteButton);\n\n  notes.push(noteObject);\n  saveNotes(notes);\n}\n\nfunction updateNote(id, newContent) {\n  const notes = getNotes();\n  const targetNote = notes.filter((note) => note.id === id)[0];\n\n  targetNote.content = newContent;\n  saveNotes(notes);\n}\n\nfunction deleteNote(id, element) {\n  const notes = getNotes().filter((note) => note.id !== id);\n\n  saveNotes(notes);\n  notesContainer.removeChild(element);\n}\n"]}